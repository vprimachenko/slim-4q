//
// Created by Valerij Primachenko on 20-06-18.
//

#ifndef DAS_KEYS_H
#define DAS_KEYS_H

namespace DAS {
	enum class Key {
		NOT_IN_PHYSICAL_DEVICE,
//	KEY_WHEEL,
//	KEY_LIGHT_INDICATOR_DPI,
//	KEY_LIGHT_LOGO,
//	KEY_LIGHT_SHOE,
		KEY_ESCAPE,
		KEY_F1,
		KEY_F2,
		KEY_F3,
		KEY_F4,
		KEY_F5,
		KEY_F6,
		KEY_F7,
		KEY_F8,
		KEY_F9,
		KEY_F10,
		KEY_F11,
		KEY_F12,
		KEY_PRINT_SCREEN,
		KEY_SCROLL_LOCK,
		KEY_PAUSE_BREAK,
		KEY_BRIGHTNESS_KEYBOARD,
		KEY_PLAY,
		KEY_NEXT,
		KEY_VOLUME_Q_BUTTON,
		KEY_BACKTICK,
		KEY_1,
		KEY_2,
		KEY_3,
		KEY_4,
		KEY_5,
		KEY_6,
		KEY_7,
		KEY_8,
		KEY_9,
		KEY_0,
		KEY_SUBTRACT,
		KEY_EQUAL,
//	KEY_ADD,
		KEY_BACKSPACE,
		KEY_INSERT,
		KEY_HOME,
		KEY_PAGE_UP,
		KEY_NUMLOCK,
		KEY_NUMPAD_DIVIDE,
		KEY_NUMPAD_MULTIPLY,
		KEY_NUMPAD_SUBTRACT,
//	KEY_LIGHT_PIPE_LEFT,
		KEY_COMMA,
		KEY_DOT,
		KEY_TAB,
		KEY_Q,
		KEY_W,
		KEY_E,
		KEY_U,
		KEY_R,
		KEY_T,
		KEY_Y,
		KEY_I,
		KEY_O,
		KEY_P,
		KEY_OPEN_SQUARE_BRACKET,
		KEY_CLOSE_SQUARE_BRACKET,
		KEY_BACKSLASH,
		KEY_DELETE,
		KEY_END,
		KEY_PAGE_DOWN,
		KEY_NUMPAD_7,
		KEY_NUMPAD_8,
		KEY_NUMPAD_9,
		KEY_NUMPAD_ADD,
		KEY_CAPS_LOCK,
		KEY_A,
		KEY_S,
		KEY_D,
		KEY_F,
		KEY_G,
		KEY_H,
		KEY_J,
		KEY_K,
		KEY_L,
		KEY_SEMICOLON,
		KEY_QUOTE,
		KEY_ENTER,
//	KEY_LIGHT_INDICATOR_GAMING_MODE,
//	KEY_LIGHT_INDICATOR_NUMLOCK,
//	KEY_LIGHT_INDICATOR_CAPSLOCK,
//	KEY_LIGHT_INDICATOR_SCROLLOCK,
//	KEY_LIGHT_PIPE_RIGHT,
		KEY_NUMPAD_4,
		KEY_NUMPAD_5,
		KEY_NUMPAD_6,
		KEY_SHIFT_LEFT,
		KEY_SHIFT_RIGHT,
		KEY_Z,
		KEY_X,
		KEY_C,
		KEY_V,
		KEY_B,
		KEY_N,
		KEY_M,
//	KEY_LESS_THAN,
//	KEY_GREATER_THAN,
		KEY_SLASH,
		KEY_ARROW_UP,
		KEY_NUMPAD_1,
		KEY_NUMPAD_2,
		KEY_NUMPAD_3,
		KEY_CONTROL_LEFT,
		KEY_META_LEFT,
		KEY_CONTEXT_MENU,
		KEY_META_RIGHT,
		KEY_ALT_LEFT,
		KEY_SPACE,
		KEY_ALT_RIGHT,
//	KEY_FN_KEY,
		KEY_CONTROL_RIGHT,
		KEY_ARROW_LEFT,
		KEY_ARROW_DOWN,
		KEY_ARROW_RIGHT,
		KEY_NUMPAD_0,
		KEY_NUMPAD_DECIMAL,
		KEY_NUMPAD_ENTER,
//	KEY_EXP_2,
//	KEY_DOLLAR_SIGN,
//	KEY_PERCENT,
//	KEY_MICRO,
//	KEY_EXCLAMATION_MARK,
//	KEY_ARGER,
//	KEY_OKONOM,
//	KEY_ROOFTOP,
//	KEY_ESZETT,
//	KEY_ACUTE_ACCENT,
//	KEY_UBERMUT,
//	KEY_HASH,
//	KEY_KLEINER,
//	KEY_PUNKT,
//	KEY_BINDESTRICH,
//	KEY_CEDILLA,
//	KEY_SPANISH_N,
//	KEY_PIPE,
//	KEY_ANGSTROM,
//	KEY_F13,
//	KEY_BRIGHTNESS_MONITOR_DOWN,
//	KEY_BRIGHTNESS_MONITOR_UP,
//	KEY_CMD_LEFT,
//	KEY_CMD_RIGHT,
		KEY_SLEEP
//	KEY_MEDIA_KEYS
	};
}
//std::vector<uint8_t> OK_RESPONSE{0x03, 0x78, 0x00, 0x96, 0x00, 0x00, 0x00};
//std::vector<uint8_t> NOT_READY{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
//std::vector<uint8_t> FLUSH{0x78, 0x0A};


#endif //DAS_KEYS_H
